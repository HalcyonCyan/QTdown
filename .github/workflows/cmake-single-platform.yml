name: Build Qt6 C++ Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      QT_VERSION: "6.6.0"        # 设置你需要的 Qt6 版本
      QT_ARCH: "gcc_64"          # Linux 64 位
      BUILD_DIR: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          libgl1-mesa-dev \
          libx11-dev \
          libxcb1-dev \
          libx11-xcb-dev \
          libxcb-glx0-dev \
          libxkbcommon-x11-dev \
          perl \
          python3 \
          git \
          wget \
          tar

    - name: Download and install Qt6
      run: |
        # 下载官方 Qt 在线安装器
        QT_RUNNER="qt-installer-linux.run"
        wget -O $QT_RUNNER https://download.qt.io/official_releases/qt/$QT_VERSION/$QT_VERSION/qt-opensource-linux-x64-$QT_VERSION.run
        chmod +x $QT_RUNNER

        # 创建非交互式安装脚本
        cat > qt-install-noninteractive.qs <<EOF
        var installer = gui.currentInstaller();
        installer.setTargetDirectory("/opt/Qt$QT_VERSION");
        var component = "qt.qt6.$QT_VERSION.$QT_ARCH";
        installer.selectComponent(component);
        installer.performInstallation();
        installer.autoRejectMessageBoxes();
        EOF

        # 安装 Qt6
        sudo ./$QT_RUNNER --script qt-install-noninteractive.qs

        # 设置环境变量
        echo "/opt/Qt$QT_VERSION/$QT_ARCH/lib/cmake" >> $GITHUB_PATH
        echo "/opt/Qt$QT_VERSION/$QT_ARCH/bin" >> $GITHUB_PATH
        export Qt6_DIR=/opt/Qt$QT_VERSION/$QT_ARCH/lib/cmake/Qt6

    - name: Configure CMake
      run: |
        mkdir -p $BUILD_DIR
        cd $BUILD_DIR
        cmake .. -DCMAKE_BUILD_TYPE=Release -DQt6_DIR=$Qt6_DIR -G Ninja

    - name: Build project
      run: |
        cd $BUILD_DIR
        ninja

    - name: Test build (optional)
      run: |
        cd $BUILD_DIR
        ctest --output-on-failure
